/*
DeftJS 0.6.6

Copyright (c) 2012 [DeftJS Framework Contributors](http://deftjs.org)
Open source under the [MIT License](http://en.wikipedia.org/wiki/MIT_License).
*/
Ext.define("Deft.log.Logger",{alternateClassName:["Deft.Logger"],singleton:!0,log:function(){},error:function(a){this.log(a,"error")},info:function(a){this.log(a,"info")},verbose:function(a){this.log(a,"verbose")},warn:function(a){this.log(a,"warn")},deprecate:function(a){this.log(a,"deprecate")}},function(){var a;Ext.isFunction(null!=(a=Ext.Logger)?a.log:void 0)?this.log=Ext.bind(Ext.Logger.log,Ext.Logger):Ext.isFunction(Ext.log)&&(this.log=function(a,b){null==b&&(b="info");"deprecate"===b&&(b="warn");
Ext.log({msg:a,level:b})})});Ext.define("Deft.util.Function",{alternateClassName:["Deft.Function"],statics:{spread:function(a,c){return function(b){Ext.isArray(b)||Ext.Error.raise({msg:"Error spreading passed Array over target function arguments: passed a non-Array."});return a.apply(c,b)}},memoize:function(a,c,b){var e;e={};return function(d){var f;f=Ext.isFunction(b)?b.apply(c,arguments):d;f in e||(e[f]=a.apply(c,arguments));return e[f]}}}});
Ext.define("Deft.ioc.DependencyProvider",{requires:["Deft.log.Logger"],config:{identifier:null,className:null,parameters:null,fn:null,value:null,singleton:!0,eager:!1},constructor:function(a){this.initConfig(a);null!=a.value&&a.value.constructor===Object&&this.setValue(a.value);this.getEager()&&(null!=this.getValue()&&Ext.Error.raise({msg:"Error while configuring '"+this.getIdentifier()+"': a 'value' cannot be created eagerly."}),this.getSingleton()||Ext.Error.raise({msg:"Error while configuring '"+
this.getIdentifier()+"': only singletons can be created eagerly."}));null!=this.getClassName()&&(a=Ext.ClassManager.get(this.getClassName()),null==a&&(Deft.Logger.warn("Synchronously loading '"+this.getClassName()+"'; consider adding Ext.require('"+this.getClassName()+"') above Ext.onReady."),Ext.syncRequire(this.getClassName()),a=Ext.ClassManager.get(this.getClassName())),null==a&&Ext.Error.raise({msg:"Error while configuring rule for '"+this.getIdentifier()+"': unrecognized class name or alias: '"+
this.getClassName()+"'"}));this.getSingleton()?null!=this.getClassName()&&null!=this.getParameters()&&Ext.ClassManager.get(this.getClassName()).singleton&&Ext.Error.raise({msg:"Error while configuring rule for '"+this.getIdentifier()+"': parameters cannot be applied to singleton classes. Consider removing 'singleton: true' from the class definition."}):(null!=this.getClassName()&&Ext.ClassManager.get(this.getClassName()).singleton&&Ext.Error.raise({msg:"Error while configuring rule for '"+this.getIdentifier()+
"': singleton classes cannot be configured for injection as a prototype. Consider removing 'singleton: true' from the class definition."}),null!=this.getValue()&&Ext.Error.raise({msg:"Error while configuring '"+this.getIdentifier()+"': a 'value' can only be configured as a singleton."}));return this},resolve:function(a){var c;Deft.Logger.log("Resolving '"+this.getIdentifier()+"'.");if(null!=this.getValue())return this.getValue();c=null;null!=this.getFn()?(Deft.Logger.log("Executing factory function."),
c=this.getFn().call(null,a)):null!=this.getClassName()?Ext.ClassManager.get(this.getClassName()).singleton?(Deft.Logger.log("Using existing singleton instance of '"+this.getClassName()+"'."),c=Ext.ClassManager.get(this.getClassName())):(Deft.Logger.log("Creating instance of '"+this.getClassName()+"'."),a=null!=this.getParameters()?[this.getClassName()].concat(this.getParameters()):[this.getClassName()],c=Ext.create.apply(this,a)):Ext.Error.raise({msg:"Error while configuring rule for '"+this.getIdentifier()+
"': no 'value', 'fn', or 'className' was specified."});this.getSingleton()&&this.setValue(c);return c}});
Ext.define("Deft.ioc.Injector",{alternateClassName:["Deft.Injector"],requires:["Deft.log.Logger","Deft.ioc.DependencyProvider"],singleton:!0,constructor:function(){this.providers={};return this},configure:function(a){Deft.Logger.log("Configuring injector.");Ext.Object.each(a,function(a,b){var e;Deft.Logger.log("Configuring dependency provider for '"+a+"'.");e=Ext.isString(b)?Ext.create("Deft.ioc.DependencyProvider",{identifier:a,className:b}):Ext.create("Deft.ioc.DependencyProvider",Ext.apply({identifier:a},
b));this.providers[a]=e},this);Ext.Object.each(this.providers,function(a,b){b.getEager()&&(Deft.Logger.log("Eagerly creating '"+b.getIdentifier()+"'."),b.resolve())},this)},canResolve:function(a){return null!=this.providers[a]},resolve:function(a,c){var b;b=this.providers[a];if(null!=b)return b.resolve(c);Ext.Error.raise({msg:"Error while resolving value to inject: no dependency provider found for '"+a+"'."})},inject:function(a,c,b){var e,d,f,g;null==b&&(b=!0);e={};Ext.isString(a)&&(a=[a]);Ext.Object.each(a,
function(b,d){var f,g;g=Ext.isArray(a)?d:b;f=this.resolve(d,c);g in c.config?(Deft.Logger.log("Injecting '"+d+"' into '"+g+"' config."),e[g]=f):(Deft.Logger.log("Injecting '"+d+"' into '"+g+"' property."),c[g]=f)},this);if(b)for(d in e)g=e[d],b="set"+Ext.String.capitalize(d),c[b].call(c,g);else Ext.isFunction(c.initConfig)&&(f=c.initConfig,c.initConfig=function(a){return f.call(this,Ext.Object.merge({},a||{},e))});return c}});
Ext.define("Deft.mixin.Injectable",{requires:["Deft.ioc.Injector"],onClassMixedIn:function(a){a.prototype.constructor=Ext.Function.createInterceptor(a.prototype.constructor,function(){return Deft.Injector.inject(this.inject,this,!1)})}});
Ext.define("Deft.mvc.ViewController",{alternateClassName:["Deft.ViewController"],requires:["Deft.log.Logger"],config:{view:null},constructor:function(a){this.initConfig(a);if(this.getView()instanceof Ext.ClassManager.get("Ext.Component"))if(this.registeredComponents={},this.isExtJS=null!=this.getView().events,this.isSenchaTouch=!this.isExtJS,this.isExtJS)if(this.getView().rendered)this.onViewInitialize();else this.getView().on("afterrender",this.onViewInitialize,this,{single:!0});else if(this.getView().initialized)this.onViewInitialize();
else this.getView().on("initialize",this.onViewInitialize,this,{single:!0});else Ext.Error.raise({msg:"Error constructing ViewController: the configured 'view' is not an Ext.Component."});return this},init:function(){},destroy:function(){return!0},onViewInitialize:function(){var a,c,b,e,d,f;this.isExtJS?(this.getView().on("beforedestroy",this.onViewBeforeDestroy,this),this.getView().on("destroy",this.onViewDestroy,this,{single:!0})):(d=this,e=this.getView().destroy,this.getView().destroy=function(){d.destroy()&&
e.call(this)});f=this.control;for(b in f)c=f[b],a=this.locateComponent(b,c),c=Ext.isObject(c.listeners)?c.listeners:null==c.selector?c:void 0,this.registerComponent(b,a,c);this.init()},onViewBeforeDestroy:function(){return this.destroy()?(this.getView().un("beforedestroy",this.onBeforeDestroy,this),!0):!1},onViewDestroy:function(){for(var a in this.registeredComponents)this.unregisterComponent(a)},getComponent:function(a){var c;return null!=(c=this.registeredComponents[a])?c.component:void 0},registerComponent:function(a,
c,b){var e,d,f,g,h;Deft.Logger.log("Registering '"+a+"' component.");null!=this.getComponent(a)&&Ext.Error.raise({msg:"Error registering component: an existing component already registered as '"+a+"'."});this.registeredComponents[a]={component:c,listeners:b};"view"!==a&&(d="get"+Ext.String.capitalize(a),this[d]||(this[d]=Ext.Function.pass(this.getComponent,[a],this)));if(Ext.isObject(b))for(e in b){d=f=b[e];h=this;g=null;if(Ext.isObject(f)&&(g=Ext.apply({},f),null!=g.fn&&(d=g.fn,delete g.fn),null!=
g.scope))h=g.scope,delete g.scope;Deft.Logger.log("Adding '"+e+"' listener to '"+a+"'.");if(Ext.isFunction(d))c.on(e,d,h,g);else if(Ext.isFunction(this[d]))c.on(e,this[d],h,g);else Ext.Error.raise({msg:"Error adding '"+e+"' listener: the specified handler '"+d+"' is not a Function or does not exist."})}},unregisterComponent:function(a){var c,b,e,d,f,g;Deft.Logger.log("Unregistering '"+a+"' component.");null==this.getComponent(a)&&Ext.Error.raise({msg:"Error unregistering component: no component is registered as '"+
a+"'."});e=this.registeredComponents[a];c=e.component;f=e.listeners;if(Ext.isObject(f))for(b in f){e=d=f[b];g=this;if(Ext.isObject(d)&&(null!=d.fn&&(e=d.fn),null!=d.scope))g=d.scope;Deft.Logger.log("Removing '"+b+"' listener from '"+a+"'.");Ext.isFunction(e)?c.un(b,e,g):Ext.isFunction(this[e])?c.un(b,this[e],g):Ext.Error.raise({msg:"Error removing '"+b+"' listener: the specified handler '"+e+"' is not a Function or does not exist."})}"view"!==a&&(c="get"+Ext.String.capitalize(a),this[c]=null);this.registeredComponents[a]=
null},locateComponent:function(a,c){var b;b=this.getView();if("view"===a)return b;Ext.isString(c)?(b=b.query(c),0===b.length&&Ext.Error.raise({msg:"Error locating component: no component found matching '"+c+"'."}),1<b.length&&Ext.Error.raise({msg:"Error locating component: multiple components found matching '"+c+"'."})):Ext.isString(c.selector)?(b=b.query(c.selector),0===b.length&&Ext.Error.raise({msg:"Error locating component: no component found matching '"+c.selector+"'."}),1<b.length&&Ext.Error.raise({msg:"Error locating component: multiple components found matching '"+
c.selector+"'."})):(b=b.query("#"+a),0===b.length&&Ext.Error.raise({msg:"Error locating component: no component found with an itemId of '"+a+"'."}),1<b.length&&Ext.Error.raise({msg:"Error locating component: multiple components found with an itemId of '"+a+"'."}));return b[0]}});Ext.define("Deft.mixin.Controllable",{});
Ext.Class.registerPreprocessor("controller",function(a,c,b,e){var d,f,g;3===arguments.length&&(d=Ext.toArray(arguments),b=d[1],e=d[2]);if(null!=c.mixins&&Ext.Array.contains(c.mixins,Ext.ClassManager.get("Deft.mixin.Controllable"))&&(d=c.controller,delete c.controller,f=[],null!=d&&(f=Ext.isArray(d)?d:[d]),a.prototype.constructor=Ext.Function.createSequence(a.prototype.constructor,function(){var a,b,c;b=0;for(c=f.length;b<c;b++){a=f[b];try{Ext.create(a,{view:this})}catch(d){Deft.Logger.warn("Error initializing Controllable instance: an error occurred while creating an instance of the specified controller: '"+
a+"'.");throw d;}}}),0<f.length))return g=this,Ext.require(f,function(){e!=null&&e.call(g,a,c,b)}),!1});Ext.Class.setDefaultPreprocessorPosition("controller","before","mixins");
Ext.define("Deft.promise.Deferred",{alternateClassName:["Deft.Deferred"],constructor:function(){this.state="pending";this.value=this.progress=void 0;this.progressCallbacks=[];this.successCallbacks=[];this.failureCallbacks=[];this.cancelCallbacks=[];this.promise=Ext.create("Deft.Promise",this);return this},then:function(a,c,b,e){var d,f,g,h,i;Ext.isObject(a)?(f=a.success,c=a.failure,b=a.progress,a=a.cancel):(f=a,a=e);i=[f,c,b,a];g=0;for(h=i.length;g<h;g++)e=i[g],!Ext.isFunction(e)&&!(null===e||void 0===
e)&&Ext.Error.raise({msg:"Error while configuring callback: a non-function specified."});d=Ext.create("Deft.promise.Deferred");e=function(a,b){return function(c){var e;if(Ext.isFunction(a))try{e=a(c);if(e===void 0)d[b](c);else e instanceof Ext.ClassManager.get("Deft.promise.Promise")||e instanceof Ext.ClassManager.get("Deft.promise.Deferred")?e.then(Ext.bind(d.resolve,d),Ext.bind(d.reject,d),Ext.bind(d.update,d),Ext.bind(d.cancel,d)):d.resolve(e)}catch(f){d.reject(f)}else d[b](c)}};this.register(e(f,
"resolve"),this.successCallbacks,"resolved",this.value);this.register(e(c,"reject"),this.failureCallbacks,"rejected",this.value);this.register(e(a,"cancel"),this.cancelCallbacks,"cancelled",this.value);this.register(function(a){return function(b){var c;if(Ext.isFunction(a)){c=a(b);c===void 0?d.update(b):d.update(c)}else d.update(b)}}(b),this.progressCallbacks,"pending",this.progress);return d.getPromise()},always:function(a){return this.then({success:a,failure:a,cancel:a})},update:function(a){"pending"===
this.state?(this.progress=a,this.notify(this.progressCallbacks,a)):Ext.Error.raise({msg:"Error: this Deferred has already been completed and cannot be modified."})},resolve:function(a){this.complete("resolved",a,this.successCallbacks)},reject:function(a){this.complete("rejected",a,this.failureCallbacks)},cancel:function(a){this.complete("cancelled",a,this.cancelCallbacks)},getPromise:function(){return this.promise},getState:function(){return this.state},register:function(a,c,b,e){Ext.isFunction(a)&&
("pending"===this.state&&c.push(a),this.state===b&&void 0!==e&&this.notify([a],e))},complete:function(a,c,b){"pending"===this.state?(this.state=a,this.value=c,this.notify(b,c),this.releaseCallbacks()):Ext.Error.raise({msg:"Error: this Deferred has already been completed and cannot be modified."})},notify:function(a,c){var b,e,d;e=0;for(d=a.length;e<d;e++)b=a[e],b(c)},releaseCallbacks:function(){this.cancelCallbacks=this.failureCallbacks=this.successCallbacks=this.progressCallbacks=null}});
Ext.define("Deft.promise.Promise",{alternateClassName:["Deft.Promise"],statics:{when:function(a,c){var b;if(a instanceof Ext.ClassManager.get("Deft.promise.Promise")||a instanceof Ext.ClassManager.get("Deft.promise.Deferred"))return a.then(c);b=Ext.create("Deft.promise.Deferred");b.resolve(a);return b.then(c)},all:function(a,c){return this.when(this.reduce(a,this.reduceIntoArray,Array(a.length)),c)},any:function(a,c){var b,e,d,f,g,h,i,j,k,l,m;e=Ext.create("Deft.promise.Deferred");k=function(a){e.update(a)};
j=function(a){b();e.resolve(a)};b=function(){return k=j=function(){}};i=function(a){return j(a)};h=function(a){return rejector(a)};f=function(a){return k(a)};d=l=0;for(m=a.length;l<m;d=++l)g=a[d],d in a&&this.when(g,i,h,f);return e.then(c)},memoize:function(a,c,b){return this.all(Ext.Array.toArray(arguments)).then(Deft.util.Function.spread(function(){return Deft.util.memoize(arguments,c,b)},c))},map:function(a,c){var b,e,d,f,g;d=Array(a.length);b=f=0;for(g=a.length;f<g;b=++f)e=a[b],b in a&&(d[b]=
this.when(e,c));return this.reduce(d,this.reduceIntoArray,d)},reduce:function(a,c,b){var e,d;d=this.when;e=[function(b,e,h){return d(b,function(b){return d(e,function(d){return c(b,d,h,a)})})}];3===arguments.length&&e.push(b);return this.when(this.reduceArray.apply(a,e))},reduceArray:function(a,c){var b,e,d,f,g;d=0;e=Object(this);f=e.length>>>0;b=arguments;if(1>=b.length)for(;;){if(d in e){g=e[d++];break}if(++d>=f)throw new TypeError;}else g=b[1];for(;d<f;)d in e&&(g=a(g,e[d],d,e)),d++;return g},
reduceIntoArray:function(a,c,b){a[b]=c;return a}},constructor:function(a){this.deferred=a;return this},then:function(a){return this.deferred.then.apply(this.deferred,arguments)},always:function(a){return this.deferred.always(a)},cancel:function(a){return this.deferred.cancel(a)},getState:function(){return this.deferred.getState()}},function(){null!=Array.prototype.reduce&&(this.reduceArray=Array.prototype.reduce)});
